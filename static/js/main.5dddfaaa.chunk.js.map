{"version":3,"sources":["components/Dropdown/Dropdown.jsx","components/DropdownWrapper/DropdownWrapper.jsx","components/Card/Card.jsx","components/CardWrapper/CardWrapper.jsx","App.js","reportWebVitals.js","index.js"],"names":["Dropdown","props","onChange","event","handleChange","type","items","map","item","value","categorySelection","platformSelection","DropdownWrapper","Card","className","rank","src","thumbnail","alt","title","short_description","CardWrapper","style","display","gridTemplateColumns","gamesData","game","indexOf","description","url","game_url","genre","platform","publisher","detail","freetogame_profile_url","id","toString","App","setState","category","target","state","fetch","then","res","json","result","console","log","error","this","filterGames","filter","games","includes","slice","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAiBeA,EAXE,SAACC,GAChB,OACE,8BACA,wBAAQC,SAAU,SAAAC,GAAK,OAAIF,EAAMG,aAAaH,EAAMI,KAAMF,IAA1D,UATkBG,EAUDL,EAAMK,MAVIA,EAAMC,KAAI,SAACC,GACxC,OACE,wBAAmBC,MAAOD,EAA1B,SAAiCA,GAApBA,WAFK,IAAAF,GCEhBI,EAAoB,CAAC,UAAW,MAAO,SAAU,YACjDC,EAAoB,CAAC,KAAM,WAWlBC,EATS,SAACX,GACvB,OACE,gCACE,cAAC,EAAD,CAAUG,aAAcH,EAAMG,aAAcE,MAAOI,EAAmBL,KAAK,aAC3E,cAAC,EAAD,CAAUD,aAAcH,EAAMG,aAAcE,MAAOK,EAAmBN,KAAK,iBCElEQ,EAXF,SAACZ,GACZ,OACE,sBAAKa,UAAU,OAAf,UACE,oBAAIA,UAAU,aAAd,SAA4Bb,EAAMc,KAAO,IACzC,qBAAKC,IAAKf,EAAMgB,UAAWC,IAAI,GAAGJ,UAAU,oBAC5C,oBAAIA,UAAU,cAAd,SAA6Bb,EAAMkB,QACnC,mBAAGL,UAAU,oBAAb,SAAkCb,EAAMmB,wBCqB/BC,EAzBK,SAACpB,GACnB,OACE,qBAAKa,UAAU,eAAeQ,MAAO,CAACC,QAAQ,OAAQC,oBAAqB,kBAA3E,SAEIvB,EAAMwB,UAAUlB,KAAK,SAAAmB,GACnB,OACE,cAAC,EAAD,CAEIX,KAAMd,EAAMwB,UAAUE,QAAQD,GAC9BP,MAAOO,EAAKP,MACZF,UAAWS,EAAKT,UAChBW,YAAaF,EAAKN,kBAClBS,IAAKH,EAAKI,SACVC,MAAOL,EAAKK,MACZC,SAAUN,EAAKM,SACfC,UAAWP,EAAKO,UAChBC,OAAQR,EAAKS,wBATRT,EAAKU,GAAGC,kBCqDdC,E,kDAvDb,aAAe,IAAD,8BACZ,gBAiCFlC,aAAe,SAACC,EAAMF,GAEpB,MADc,aAAeE,EACd,EAAKkC,SAAS,CAACC,SAAUrC,EAAMsC,OAAOhC,QAAU,EAAK8B,SAAS,CAACP,SAAU7B,EAAMsC,OAAOhC,SAlCrG,EAAKiC,MAAQ,CACXF,SAAU,UACVR,SAAU,KACVP,UAAW,IALD,E,qDAWd,WAAqB,IAAD,OAClBkB,MAAM,+DAAgE,CACpE,OAAU,MACV,QAAW,CACT,iBAlBO,qDAmBP,kBAAmB,gDAGpBC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACG,GACC,EAAKR,SAAS,CACZd,UAAWsB,GACVC,QAAQC,IAAIF,OAEjB,SAACG,GACC,EAAKX,SAAS,CACZW,e,oBAWV,WAAU,IAAD,EACiCC,KAAKT,MAAtCF,EADA,EACAA,SAAUR,EADV,EACUA,SACXoB,EAFC,EACoB3B,UACG4B,QAAQ,SAAAC,GACpC,OAAOA,EAAMvB,MAAMwB,SAASf,IAAac,EAAMtB,SAASuB,SAASvB,MAGnE,OACE,gCACE,yCAAYmB,KAAKT,MAAMF,SAAvB,cAA4CW,KAAKT,MAAMV,YACvD,cAAC,EAAD,CAAiB5B,aAAc+C,KAAK/C,eACpC,cAAC,EAAD,CAAaqB,UAAW2B,EAAYI,MAAM,EAAG,a,GAlDnCC,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5dddfaaa.chunk.js","sourcesContent":["const dropDownItems = items => items.map((item) => {\n  return (\n    <option key={item} value={item}>{item}</option>\n  )\n});\n\nconst Dropdown = (props) => {\n  return(  \n    <div>\n    <select onChange={event => props.handleChange(props.type, event)}>\n      {dropDownItems(props.items)}\n    </select>\n    </div>\n  )\n  \n}\n\nexport default Dropdown;","import Dropdown from '../Dropdown/Dropdown';\n\nconst categorySelection = [\"Shooter\", \"MMO\", \"MMORPG\", \"Strategy\"];\nconst platformSelection = [\"PC\", \"Browser\"];\n\nconst DropdownWrapper = (props) => {\n  return (\n    <div>\n      <Dropdown handleChange={props.handleChange} items={categorySelection} type=\"category\"></Dropdown>\n      <Dropdown handleChange={props.handleChange} items={platformSelection} type=\"platform\"></Dropdown>\n    </div>\n  )\n}\n\nexport default DropdownWrapper;\n\n\n","const Card = (props) => {\n  return (\n    <div className=\"card\">\n      <h1 className=\"card__rank\">{props.rank + 1}</h1>\n      <img src={props.thumbnail} alt=\"\" className=\"card__thumbnail\"/>\n      <h2 className=\"card__title\">{props.title}</h2>\n      <p className=\"card__description\">{props.short_description}</p>\n    </div>\n  )\n}\n\nexport default Card;","import Card from '../Card/Card';\n\nconst CardWrapper = (props) => {\n  return(\n    <div className=\"card-wrapper\" style={{display:\"grid\", gridTemplateColumns: \"repeat(3, 1fr)\"}}>\n      {\n        props.gamesData.map( game => {\n          return(\n            <Card\n                key={game.id.toString()}\n                rank={props.gamesData.indexOf(game)} \n                title={game.title} \n                thumbnail={game.thumbnail} \n                description={game.short_description}\n                url={game.game_url}\n                genre={game.genre}\n                platform={game.platform}\n                publisher={game.publisher}\n                detail={game.freetogame_profile_url}\n            ></Card>\n          )          \n        })\n      }\n    </div>\n  )  \n}\n\nexport default CardWrapper;","import React, { Component } from 'react';\nimport DropdownWrapper from './components/DropdownWrapper/DropdownWrapper';\nimport CardWrapper from './components/CardWrapper/CardWrapper'\n\nconst APIKey = \"a60e9faf7fmshc23154d0472737cp1baaf5jsna13ea55c29e8\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      category: \"Shooter\",\n      platform: \"PC\",\n      gamesData: []\n    };\n    \n  }\n\n  // Fetching first 10 results from the api\n  componentDidMount() {\n    fetch(`https://free-to-play-games-database.p.rapidapi.com/api/games`, {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-key\": APIKey,\n        \"x-rapidapi-host\": \"free-to-play-games-database.p.rapidapi.com\"\n      }\n    })\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            gamesData: result\n          }, console.log(result));\n        },\n        (error) => {\n          this.setState({\n            error\n          });\n        }\n      )\n  }\n\n  handleChange = (type, event) => {\n    const state = \"category\" === type;\n    return state ? this.setState({category: event.target.value}) : this.setState({platform: event.target.value});\n  }\n\n  render() {\n    const {category, platform, gamesData} = this.state;\n    const filterGames = gamesData.filter( games => {\n      return games.genre.includes(category) && games.platform.includes(platform);\n    });\n\n    return (\n      <div>\n        <h1>Top 10 {this.state.category} Games for {this.state.platform}</h1>\n        <DropdownWrapper handleChange={this.handleChange}></DropdownWrapper>\n        <CardWrapper gamesData={filterGames.slice(0, 10)}></CardWrapper>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}