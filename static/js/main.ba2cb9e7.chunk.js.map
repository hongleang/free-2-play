{"version":3,"sources":["components/Navbar/Navbar.js","components/Card/Card.js","components/Carousel/Carousel.js","pages/Homepage/Hompage.js","components/TopGameCard/TopGameCard.js","components/GameFilter/GameFilter.js","pages/TopGames/TopGames.js","App.js","index.js"],"names":["Navbar","className","to","Card","props","games","map","game","src","thumbnail","alt","platform","title","genre","id","SwiperCore","use","Autoplay","Navigation","Pagination","EffectFade","Carousel","pagination","clickable","slidesPerView","spaceBetween","breakpoints","slidesPerGroup","loop","loopFillGroupWithBlank","centeredSlides","autoplay","delay","navigation","href","freetogame_profile_url","target","rel","Homepage","useState","gameData","setGameData","useEffect","fetch","method","headers","then","response","json","data","slice","catch","err","console","error","TopGameCard","gamesData","index","game_url","short_description","release_date","GameFilter","onChangePlatform","onChangeGenre","name","onChange","event","selection","selectionIndex","TopGames","setGenre","setPlatform","setData","date","Date","fullDate","getMonth","getFullYear","toLowerCase","log","preventDefault","platforms","value","genres","App","basename","exact","path","history","createBrowserHistory","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ba2cb9e7.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\r\n\r\nimport \"./Navbar.scss\";\r\nimport \"./Toggle.scss\"\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <Link to=\"/\" className=\"navbar__logo\">\r\n        F2P <i className=\"fas fa-dice\"></i> GAMES\r\n      </Link>\r\n      <ul className=\"navbar__menu\">\r\n        <li className=\"navbar__item\">\r\n          <Link to=\"/\" className=\"navbar__link\">\r\n            New Release Games\r\n          </Link>\r\n        </li>\r\n        <li className=\"navbar__item\">\r\n          <Link to=\"/topgames\" className=\"navbar__link\">\r\n            Top Games\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport \"./Card.scss\";\r\n\r\nconst Card = (props) => {\r\n  return (\r\n    <div className=\"card__grid\">\r\n      {props.games && props.games.map((game) => {\r\n        return (\r\n          <div className=\"card__item shadow-lg\" key={game.id}>\r\n            <img\r\n              src={game.thumbnail}\r\n              alt=\"\"\r\n              className=\"card__item__img\"\r\n            />\r\n            <div className=\"card__item__content\">\r\n              <div className=\"card__item__content__left\">\r\n                <small>Available on {game.platform}</small>\r\n                <h6>{game.title}</h6>\r\n              </div>\r\n              <div className=\"card__item__content__right\">\r\n                <div className=\"badge badge--purple\">{game.genre}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","// Import Swiper React components\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport SwiperCore, {\r\n  Autoplay,\r\n  Navigation,\r\n  Pagination,\r\n  EffectFade,\r\n} from \"swiper/core\";\r\n\r\nimport \"./Carousel.scss\";\r\nimport \"swiper/swiper.min.css\";\r\nimport \"swiper/components/pagination/pagination.min.css\";\r\n\r\nSwiperCore.use([Autoplay, Navigation, Pagination, EffectFade]);\r\n\r\nconst Carousel = (props) => {\r\n  return (\r\n    <Swiper\r\n      pagination={{\r\n        clickable: true,\r\n      }}\r\n      slidesPerView={2}\r\n      spaceBetween={100}\r\n      breakpoints={{\r\n        640: {\r\n          slidesPerView: 2,\r\n          spaceBetween: 20,\r\n        },\r\n        768: {\r\n          slidesPerView: 2,\r\n          spaceBetween: 40,\r\n        },\r\n        1024: {\r\n          slidesPerView: 2,\r\n          spaceBetween: 50,\r\n        },\r\n      }}\r\n      slidesPerGroup={1}\r\n      loop={true}\r\n      loopFillGroupWithBlank={true}\r\n      centeredSlides={true}\r\n      autoplay={{\r\n        delay: 10500,\r\n      }}\r\n      navigation={true}\r\n      className=\"mySwiper\"\r\n    >\r\n      {props.games &&\r\n        props.games.map((game) => {\r\n          return (\r\n            <SwiperSlide key={game.id}>\r\n              <a href={game.freetogame_profile_url} target=\"_blank\" rel='noreferrer'>\r\n                <img src={game.thumbnail} alt=\"\" />\r\n              </a>\r\n            </SwiperSlide>\r\n          );\r\n        })}\r\n    </Swiper>\r\n  );\r\n};\r\n\r\nexport default Carousel;\r\n","import { useState, useEffect } from \"react\";\r\n\r\n\r\n// Import components\r\nimport Card from \"../../components/Card/Card\";\r\nimport Carousel from \"../../components/Carousel/Carousel\"\r\n\r\nimport \"../Homepage/Homepage.scss\";\r\n\r\nconst Homepage = () => {\r\n  const [gameData, setGameData] = useState(null);\r\n\r\n  useEffect( () => {\r\n    const fetchData = query => {\r\n      fetch(\r\n        `https://free-to-play-games-database.p.rapidapi.com/api/games?sort-by=release-date`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"x-rapidapi-key\":\r\n              \"a60e9faf7fmshc23154d0472737cp1baaf5jsna13ea55c29e8\",\r\n            \"x-rapidapi-host\": \"free-to-play-games-database.p.rapidapi.com\",\r\n          },\r\n        }\r\n      )\r\n        .then((response) => {\r\n          return response.json();\r\n        })\r\n        .then((data) => setGameData(data.slice(0,100)))\r\n        .catch((err) => {\r\n          console.error(err);\r\n        });\r\n    }\r\n    \r\n    fetchData();\r\n    \r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"homepage\">\r\n      <div className=\"homepage__container container\">\r\n        <h5 className=\"hompage__header fw-bold\">\r\n          <i className=\"fab fa-hotjar text-danger\"></i> New Release Free Games\r\n        </h5>\r\n        <hr />\r\n      </div>\r\n      <div className=\"container-fluid\">\r\n        {gameData && <Carousel games={gameData.slice(0,5)}></Carousel>}\r\n        <hr />\r\n        {gameData && <Card games={gameData.slice(6,12)}></Card>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","import React from 'react'\r\n\r\nimport './TopGameCard.scss';\r\n\r\nconst TopGameCard = (props) => {\r\n  return (\r\n    <div className=\"topgamesCardWrapper\">\r\n    {\r\n      // Map top 10 results\r\n      props.gamesData.map((data, index) => {\r\n        return (\r\n          <a className=\"topgamesCard shadow-lg\" key = {index} href={data.game_url}>\r\n            <div className=\"topgamesCard__img\">\r\n              <h2 className=\"ranking\">{index + 1}.</h2>\r\n              <img src={data.thumbnail} alt=\"game-thumbnail\" />\r\n            </div>\r\n            <div className=\"topgamesCard__content\">\r\n              <h5 className=\"title\">{data.title}</h5>\r\n              <p className=\"description\">{data.short_description}</p>\r\n              <p className=\"release-date\">{data.release_date}</p>\r\n            </div>\r\n          </a>\r\n        )\r\n      })\r\n    }\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TopGameCard\r\n","import React from 'react';\r\n\r\nimport './GameFilter.scss';\r\n\r\nconst GameFilter = (props) => {\r\n  const { onChangePlatform , onChangeGenre } = props;\r\n  \r\n  const genreSelection = [\"MMO\", \"MMORPG\", \"Shooter\", \"Strategy\"];\r\n  const platformSelection = [\"PC\", \"Browser\"];\r\n  \r\n  \r\n  return(\r\n    <div className=\"gamefilter-wrapper\">\r\n      <div className=\"platform-filter\">\r\n        <p>See more top ten games in:</p>\r\n        <div className=\"dropdown\">\r\n          <select\r\n           name=\"menu\" id=\"selection\" \r\n           className=\"btn btn-secondary dropdown-toggle\"\r\n           onChange={event => onChangeGenre(event)}\r\n           >\r\n            {\r\n            genreSelection.map((selection, selectionIndex) => {\r\n              return (\r\n                <option key={selectionIndex}>{selection}</option>\r\n              )\r\n              })\r\n            }\r\n          </select>          \r\n        </div>\r\n      </div>\r\n      <div className=\"genre-filter\">\r\n        <p>See more top ten games in:</p>\r\n        <div className=\"dropdown\">\r\n          <select\r\n          name=\"menu\" id=\"selection\" \r\n          className=\"btn btn-secondary dropdown-toggle\"\r\n          onChange={event => onChangePlatform(event)}\r\n          >\r\n            {\r\n            platformSelection.map((selection, selectionIndex) => {\r\n              return (\r\n                <option key={selectionIndex}>{selection}</option>\r\n              )\r\n              })\r\n            }\r\n          </select>          \r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default GameFilter;","import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport TopGameCard from '../../components/TopGameCard/TopGameCard';\r\nimport GameFilter from '../../components/GameFilter/GameFilter';\r\n\r\nimport './TopGames.scss';\r\n\r\nconst TopGames = (props) => {\r\n\r\n  const [ genre, setGenre ] = useState('Shooter');\r\n  const [platform, setPlatform] = useState('PC');\r\n  const [data, setData] = useState(null);\r\n  const date = new Date();\r\n  const monthsName = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n\r\n  const fullDate = `${monthsName[date.getMonth()]}, ${date.getFullYear()}`;\r\n\r\n  useEffect(() => {\r\n    const fetchingGames = () => {\r\n      fetch(`https://free-to-play-games-database.p.rapidapi.com/api/games?platform=${platform.toLowerCase()}&category=${genre.toLowerCase()}&sort-by=popularity`, {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n              \"x-rapidapi-key\": \"a60e9faf7fmshc23154d0472737cp1baaf5jsna13ea55c29e8\",\r\n              \"x-rapidapi-host\": \"free-to-play-games-database.p.rapidapi.com\"\r\n            }\r\n          }      \r\n      )\r\n      .then(response => response.json())\r\n      .then(data => setData(data))\r\n      .catch(err => console.log(err));\r\n    }\r\n    fetchingGames();\r\n  },[platform, genre]);\r\n\r\n  const onChangePlatformHandler = (event) => {\r\n    event.preventDefault();\r\n    const platforms = event.target.value.toLowerCase();\r\n    setPlatform(platforms);\r\n  };\r\n\r\n  const onChangeGenreHandler = (event) => {\r\n    event.preventDefault();\r\n    const genres = event.target.value.toLowerCase();\r\n    setGenre(genres);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"topgames\">\r\n      <div className=\"topgames__container container\">\r\n        <h2 className=\"topgames__header fw-bold\">\r\n          <i className=\"fab fa-hotjar text-danger\"></i> Popular free games title\r\n        </h2>\r\n        <hr />\r\n        <h3 className=\"display-1\">Top 10 {genre} for {platform} in {fullDate}</h3>\r\n        <p>Below, you can find our ongoing Top 10 Free {genre} Games in August 2021. Credited: https://www.freetogame.com/</p>\r\n        <GameFilter onChangePlatform={onChangePlatformHandler} onChangeGenre={onChangeGenreHandler}></GameFilter>\r\n      </div>\r\n      <div className=\"container\">\r\n        { data && <TopGameCard gamesData={data.slice(0,10)}></TopGameCard> }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default TopGames;","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport Homepage from './pages/Homepage/Hompage'\r\nimport Topgames from './pages/TopGames/TopGames'\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n    <Router basename=\"/\">\r\n      <div>\r\n        <Navbar></Navbar>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Homepage></Homepage>\r\n          </Route>\r\n          <Route exact path=\"/topgames\">\r\n            <Topgames></Topgames>\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Router } from \"react-router\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\nimport { createBrowserHistory } from \"history\";\r\n\r\nconst history = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n  <Router history={history}>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n"],"sourceRoot":""}